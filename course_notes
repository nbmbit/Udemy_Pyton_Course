str() строка
int() целое число
round() округление флоат чисел
len() длинна строки
type() тип строки
open() открыть файл
	with open('file', mode='r,w,a,r+,w+') as <var>:
		<var2> = <var>.read()
	print(var2)
ord() отображает юникод номер символа
chr() отображает символ по юникод номеру


.count() посчитать количество указанных символов в строке
.capitalize() перевод первого символа в верхний регистр
.upper() перевод всей строки в верхний регистр
.lower() перевод всей строки в нижний регистр
.isupper/islower() проверка регистра всей строки
.isalnum() строка состоит только из цифр и букв
.isalpha() строка состоит только из букв
.isspace() проверка содержит ли строка только пробелы
.strip() удаляет пробелы в начале и конце строки
	print(<var>.strip() == "") способ проверки пустая ли строка
.startswith()/.endswith() проверка с какого символа начинается/заканчивается строка
.split() разделение строки по сепаратору удаляя его
	data = "12;10;11;18"
	split_data = data.split(";")
	print(split_data)
	['12', '10', '11', '18']
.partition() разделение строки по сепаратору не удаляя его
.read() читать файл (возвращает str)
.write() записать в файл (mode=w перезаписать файл, mode=a дописать в конец файла)
.readlines() чтение файла построчно (возвращает list)
.seek(0) перевод строки на начало файла после .read()
.close() закрыть файл после read()
.closed проверка закрыт ли файл

if not <var> - (if not True) if x is false, then True, else False/
	x = ""
	#if not true
	if not x:
		print("empty")
	else:
		print("not empty")
	empty

\n новая строка
\t табуляция

r"" если необходимо выводить текст без экранирования

<variable>[int] обращению к строчному элементу по его индексу (начало строки с 0, с конца строки с -1)
<variable>[int:int:int] выводить строку с указанного символа (подстрока)/до указанного/через указанное количество символов

print("My name is {}".format("Sasha")) - {} плейсхолдер, способ подстановки через плейсхолдер.
print("My name is {} and I'm {}".format("Sasha", 30)) - {} плейсхолдер, способ подстановки через плейсхолдер.
f"{} {}" форматирование позволяющее не вызывать .format() и использовать имя переменной напрямую в плейсхолдере


Конкатенация
print(first + " " + second)
print("%s %s" % (first, second))
print("{} {}".format(first, second))

var="a"
var*7
'aaaaaaa'